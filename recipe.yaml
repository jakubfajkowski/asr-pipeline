corpus:             'corpus.txt'
lexicon:            'lexicon.txt'
lexicon_rules:      'lexicon.rules'
lm_arpa:            'lm.arpa'
lm_fst:             'G.fst'
nonsilence_phones:  'nonsilence_phones.txt'
optional_silence:   'optional_silence.txt'
silence_phones:     'silence_phones.txt'
spk2gender:         'spk2gender'
spk2utt:            'spk2utt'
text:               'text'
utt2spk:            'utt2spk'
wav_scp:            'wav.scp'
words:              'words.txt'

build_dir:  '${BUILDS_ROOT}/$(lang)/$(version)'
exp_dir:    '$(build_dir)/exp'
data_dir:   '$(build_dir)/data'
lang_dir:   '$(build_dir)/lang'
local_dir:  '$(build_dir)/local'
test_dir:   '$(data_dir)/test'
train_dir:  '$(data_dir)/train'
dict_dir:   '$(local_dir)/dict'

targets:
  dirs:
    - mkdir -p $(build_dir)
    - mkdir -p $(exp_dir)
    - mkdir -p $(data_dir)
    - mkdir -p $(lang_dir)
    - mkdir -p $(local_dir)
    - mkdir -p $(test_dir)
    - mkdir -p $(train_dir)
    - mkdir -p $(dict_dir)

  train_data: 'cp -r $(corpus_train)/* $(train_dir)'
  test_data:  'cp -r $(corpus_test)/* $(test_dir)'
  local_data: 'if [ -d "$(corpus_local)" ]; then
                   cp -r $(corpus_local)/* $(local_dir)
               fi'

  $(test_dir) $(train_dir):
    $()/$(wav_scp):
      command:   './local/make_wav_scp.sh'
      required:
              -  '$()/*/*.wav'

    $()/$(text):
      command:   './local/make_text.sh $(lang)'
      required:
              -  '$()/*/*transcription.tsv'

    $()/$(corpus):
      command:   './local/make_data_corpus.sh $(lang)'
      required:
              -  '$()/$(text)'

    $()/$(words):
      command:   './local/make_words.sh $(lang)'
      required:
              -  '$()/$(corpus)'

    $()/$(lexicon):
      command:   './local/make_data_lexicon.sh $(lang) $(dict_dir)/$(lexicon_rules)'
      required:
              -  '$()/$(words)'

    $()/$(utt2spk):
      command:   './local/make_utt2spk.sh'
      required:
              -  '$()/*/*.wav'

    $()/$(spk2utt):
      command:   './utils/utt2spk_to_spk2utt.pl'
      required:
             -   '$()/$(utt2spk)'
             
    features:  'case $(feature_type) in
                fbank)
                    steps/make_fbank.sh --nj 4 $() $()/log $()
                    ;;
                mfcc)
                    steps/make_mfcc.sh --nj 4 $() $()/log $()
                    ;;
                plp)
                    steps/make_plp.sh --nj 4 $() $()/log $()
                    ;;
                esac'
            
    cmvn:       'steps/compute_cmvn_stats.sh $() $()/log $()'

    sanity-check:  'utils/fix_data_dir.sh $()'

  $(local_dir):
    $()/~$(corpus):
      command:   'cat'
      required:
              -  '$()/$(corpus)'

    $()/$(corpus):
      command:   './local/make_local_corpus.sh $(lang)'
      required:
              -  '$()/~$(corpus)'

  $(dict_dir):
    $()/~$(lexicon):
      command:  'cat'
      required:
             -  '$()/$(lexicon)'


    $()/$(lexicon):
      command:   './local/make_local_lexicon.sh $()/$(lexicon_rules)'
      required:
              -  '$(data_dir)/*/$(lexicon)'
              -  '$()/~$(lexicon)'

    $()/$(silence_phones):
      command:  './local/make_silence_phones.sh'

    $()/$(optional_silence):
      command:  './local/make_optional_silence.sh'

    $()/$(nonsilence_phones):
      command:  './local/make_nonsilence_phones.sh'
      required:
             -  '$()/$(silence_phones)'
             -  '$()/$(lexicon)'
             
  $(local_dir)/$(lm_arpa): 'ngram-count -order $(ngram_order) -wbdiscount -text $(local_dir)/$(corpus) -lm $(local_dir)/$(lm_arpa)'
  $(lang_dir):     
    preparation:  './utils/prepare_lang.sh $(dict_dir) "<UNK>" $(local_dir)/lang $()'
    $()/G.fst:    'arpa2fst --disambig-symbol=#0 --read-symbol-table=$(lang_dir)/words.txt $(local_dir)/$(lm_arpa) $()/$(lm_fst)'

  $(exp_dir):
    mono:
      - './steps/train_mono.sh --nj 4 $(train_dir) $(lang_dir) $(exp_dir)/mono'
      - './utils/mkgraph.sh $(lang_dir) $(exp_dir)/mono $(exp_dir)/mono/graph'
      - './local/score.sh $(train_dir) $(test_dir) $(lang_dir) $(exp_dir)/mono'

    mono_ali:
      - './steps/align_si.sh --nj 4 $(train_dir) $(lang_dir) $(exp_dir)/mono $(exp_dir)/mono_ali'

    tri1:
      - './steps/train_deltas.sh $(hidden_states_number) $(gaussians_number) $(train_dir) $(lang_dir) $(exp_dir)/mono_ali $(exp_dir)/tri1'
      - './utils/mkgraph.sh $(lang_dir) $(exp_dir)/tri1 $(exp_dir)/tri1/graph'
      - './local/score.sh $(train_dir) $(test_dir) $(lang_dir) $(exp_dir)/tri1'

    tri1_ali:
      - './steps/align_si.sh --nj 4 --use-graphs true $(train_dir) $(lang_dir) $(exp_dir)/tri1 $(exp_dir)/tri1_ali'

    tri2a:
      - './steps/train_deltas.sh  $(hidden_states_number) $(gaussians_number) $(train_dir) $(lang_dir) $(exp_dir)/tri1_ali $(exp_dir)/tri2a'
      - './utils/mkgraph.sh $(lang_dir) $(exp_dir)/tri2a $(exp_dir)/tri2a/graph'
      - './local/score.sh $(train_dir) $(test_dir) $(lang_dir) $(exp_dir)/tri2a'

    tri2b:
      - './steps/train_lda_mllt.sh  $(hidden_states_number) $(gaussians_number) $(train_dir) $(lang_dir) $(exp_dir)/tri1_ali $(exp_dir)/tri2b'
      - './utils/mkgraph.sh $(lang_dir) $(exp_dir)/tri2b $(exp_dir)/tri2b/graph'
      - './local/score.sh $(train_dir) $(test_dir) $(lang_dir) $(exp_dir)/tri2b'

    tri2b_ali:
      - './steps/align_si.sh --nj 4 --use-graphs true $(train_dir) $(lang_dir) $(exp_dir)/tri2b $(exp_dir)/tri2b_ali'

    tri3b:
      - './steps/train_sat.sh $(hidden_states_number) $(gaussians_number) $(train_dir) $(lang_dir) $(exp_dir)/tri2b_ali $(exp_dir)/tri3b'
      - './utils/mkgraph.sh $(lang_dir) $(exp_dir)/tri3b $(exp_dir)/tri3b/graph'
      - './local/score.sh $(train_dir) $(test_dir) $(lang_dir) $(exp_dir)/tri3b'